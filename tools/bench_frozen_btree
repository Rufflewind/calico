#!/usr/bin/env python
import glob, os, re
import matplotlib
import matplotlib.pyplot as plt
import pandas as pd
matplotlib.style.use('ggplot')

# can set CPPFLAGS and DATA env vars

data_dir = os.environ.get("DATA", "data")

if not os.path.exists(data_dir):
    for cc in ["clang", "gcc"]:
        for b in [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40]:
            os.system("""
            mkdir -p "${{DATA-data}}" &&
            make clean &&
            make CPPFLAGS="$CPPFLAGS -DB={b}" CC={cc} tmp/bench-frozen_btree &&
            tools/bench tmp/bench-frozen_btree >"${{DATA-data}}"/{cc}-b{b}.txt
            """.format(**locals()))

rows = []
for fn in glob.glob(data_dir + "/*.txt"):
    cc, b = re.match("(\w+)-b(\d+).txt", os.path.basename(fn)).groups()
    b = int(b)
    with open(fn) as f:
        for line in f:
            k, t = re.match("(\w+)\s*=\s*([\d.]+)", line).groups()
            t = float(t)
            rows.append((cc, b, k, t))

d = pd.DataFrame.from_records(rows, columns=["cc", "b", "k", "t"])
cols = []
lgn = []
for gk, g in d.groupby(["cc", "k"]):
    g = g.sort_values(["b"])
    if not cols:
        cols.append(g["b"])
    cols.append(g["t"])
    lgn.append((float(g[g["b"] == 32]["t"]), str(gk)))
    ls = "-"
    if gk[1].endswith("_100"):
        ls = ":"
    if gk[1].endswith("_1000"):
        ls = "--"
    color = "blue"
    if gk[0] == "clang":
        color = "red" if "_b_" in gk[1] else "yellow"
    else:
        color = "blue" if "_b_" in gk[1] else "cyan"
    plt.plot(g["b"], g["t"],
             label=str(gk),
             linestyle=ls,
             linewidth=4 if "random" in gk[1] else 1,
             color=color)

for _, y in sorted(lgn, reverse=True):
    print(y)

#plt.legend().get_frame().set_alpha(.5)
plt.show()
